<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
https://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
https://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置整合mybatis过程  classpath指 main下的子目录java目录和resources目录-->
    <!-- 1:配置数据库相关参数 yml的属性${url}-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 2:数据库的连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- (c3p0)连接池的私有属性,指(Connection连接对象) -->
        <!-- maxPoolSize(连接池中最大的数量:默认是15) -->
        <property name="maxPoolSize" value="30"/>
        <!-- minPoolSize(连接池中最小的数量:默认是3) -->
        <property name="minPoolSize" value="10"/>
        <!-- autoCommitOnClose关闭连接后不自动commit:默认值是false -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- checkoutTimeout获取连接超时时间 -->
        <property name="checkoutTimeout" value="1000"/>
        <!-- acquireRetryAttempts当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
    <!-- 约定大于配置，多个包时可以用分号(;)隔开 -->
    <!-- 3:配置SqlSessionFactoryBean对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBatis全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包,使用别名 例:org.seckill.entity.Seckill==>转换成Seckill-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!-- 扫描sql配置文件:mapper -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!-- 4:配置扫描Dao接口包，动态实现Dao接口。注入到spring容器中  MapperScannerConfigurer目的:防止提前初始化sqlSessionFactory-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>
</beans>